name: test-generic-get-github-members
on:
  push:
    paths:
      - 'actions/generic-get-github-members/**'
      - 'scripts/generic-get-github-members.sh'
      - 'scripts/common-libs.sh'
      - '.github/workflows/unit-test-generic-get-github-members.yml'
  workflow_dispatch:

jobs:
  read-repo:
    runs-on: self-hosted
    outputs:
      BRANCH-NAME: ${{ steps.get-repo.outputs.branch-name }}
      REPO-NAME: ${{ steps.get-repo.outputs.name }}
      DELTA-COMMIT-MSG: ${{ steps.get-repo.outputs.delta-commit-msg }}
      COMMIT-HASH: ${{ steps.get-repo.outputs.commit-hash }}
      PR-NUM: ${{ steps.get-repo.outputs.pr-num }}
      PR-TARGET-BRANCH: ${{ steps.get-repo.outputs.pr-target-branch }}
      SOURCE-BRANCH: ${{ steps.get-repo.outputs.source-branch }}
      COMMIT-SHA: ${{ steps.get-repo.outputs.commit-sha }}
      FLATTEN-BRANCH: ${{ steps.get-repo.outputs.flatten-branch }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get repo details
        id: get-repo
        run: |
          branchName="$(echo ${GITHUB_REF_NAME} | cut -d'/' -f1)"
          sourceBranch=${GITHUB_REF_NAME}
          prTargetBranch='NIL'
          isPR=false
          commitMessages='NIL'
          commitHash=${GITHUB_SHA}
          prNum='NIL'
          if [[ ! -z "$GITHUB_HEAD_REF" ]]; then
            echo "[DEBUG] This is a PR. GITHUB_HEAD_REF is $GITHUB_HEAD_REF"
            branchName=$(echo $GITHUB_HEAD_REF | cut -d"/" -f1)
            sourceBranch=${GITHUB_HEAD_REF}
            isPR=true
            prTargetBranch=remotes/origin/${GITHUB_BASE_REF}
            git fetch --all
            echo [DEBUG] git log $prTargetBranch..$commitHash --pretty=format:"%s"
            commitHash=$(git log | grep "Merge.*into" | head -1 | xargs | cut -d" " -f2)
            commitMessages=$(git log $prTargetBranch..$commitHash --pretty=format:"%s" | sed s/[\`\']//g | tr '\n' ' ' | xargs)
            prNum=$(echo $GITHUB_REF_NAME | cut -d"/" -f1)
          fi
          echo [DEBUG] commitHash=${commitHash}
          echo [DEBUG] commitMessages=${commitMessages}
          flattenBranch=${sourceBranch/\//_}
          echo "source-branch=${sourceBranch}" >> $GITHUB_OUTPUT
          echo "pr-num=${prNum}" >> $GITHUB_OUTPUT
          echo "pr-target-branch=${prTargetBranch}" >> $GITHUB_OUTPUT
          echo "commit-hash=${commitHash}" >> $GITHUB_OUTPUT
          echo "branch-name=${branchName}" >> $GITHUB_OUTPUT
          echo "name=$(echo ${GITHUB_REPOSITORY}  | cut -d'/' -f2)" >> $GITHUB_OUTPUT
          echo "delta-commit-msg=${commitMessages}" >> $GITHUB_OUTPUT
          echo "flatten-branch=${flattenBranch}" >> $GITHUB_OUTPUT

  test-scenario-1-start:
    runs-on: ubuntu-latest
    needs: [ read-repo ]
    steps:
      - name: Get GitHub Member
        id: get-member
        uses: partior-libs/gcs-pipe-utils/actions/generic-get-github-members@${{ needs.read-repo.outputs.SOURCE-BRANCH }}
        with: 
          target-github-user: 'bot02@partior.com'
          auth-token: ${{ secrets.GH_AUTH_TOKEN }}
          auth-cookie-session: ${{ secrets.GH_AUTH_COOKIE_SESSION }}
          upload: true

      - name: View lookup result
        run:  |
          echo "[INFO] Username: ${{ steps.get-member.outputs.member-username }}"
          echo "[INFO] Email: ${{ steps.get-member.outputs.member-email }}"
