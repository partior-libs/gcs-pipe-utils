## For this action to work, it has to be executed after a matrix job where it will generate another sequence item list to be executed as sub matrix.
## It is important to note that this action expect "YAML_FINAL_PROMOTION_CONFIG_IMPORTER" already present prior this action being called

name: 'Partior - Generic initialize and inject promotion variables'
description: 'Generic initialize and inject promotion variables'
inputs:
  sequence-item:  
    description: 'Item value from matrix execution while reading promotio.artifact'
    required: true
    default: ''
# outputs:
#   found-list:
#     description: "List of sequence name in array"
#     value: ${{ steps.get-sequence.outputs.list }}

runs:
  using: "composite"
  steps:
    - name: Initialize promotion variables for ${{ matrix.artifact-sequence-item }}
      run: |
        currentSequenceItem="${{ inputs.sequence-item }}"
        ARTIFACT_BASE_NAME=$(echo $currentSequenceItem | awk -F'__' '{print $1}')
        SEQUENCE_ITEM_NO=$(echo $currentSequenceItem | awk -F'__' '{print $2}')
        ARTIFACT_BASE_NAME=${ARTIFACT_BASE_NAME}
        YAML_FINAL_PROMOTION_CONFIG_IMPORTER=yaml_final_promotion_config_importer_${ARTIFACT_BASE_NAME} _${{ github.run_id }}_${{ github.run_number }}

        # echo SMC_NAME=${SMC_NAME} >> $GITHUB_ENV
        echo "SEQUENCE_ITEM_NO=${SEQUENCE_ITEM_NO}" >> $GITHUB_ENV
        echo "ARTIFACT_BASE_NAME=${ARTIFACT_BASE_NAME}" >> $GITHUB_ENV
        echo "YAML_FINAL_PROMOTION_CONFIG_IMPORTER=${YAML_FINAL_PROMOTION_CONFIG_IMPORTER}" >> $GITHUB_ENV

        # echo [INFO] SMC_NAME=${SMC_NAME}
        echo [INFO] SEQUENCE_ITEM_NO=${SEQUENCE_ITEM_NO}
        echo [INFO] ARTIFACT_BASE_NAME=${ARTIFACT_BASE_NAME}
        echo [INFO] YAML_FINAL_PROMOTION_CONFIG_IMPORTER=${YAML_FINAL_PROMOTION_CONFIG_IMPORTER}
      shell: bash

    - name: Download Final Promotion importer
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.YAML_FINAL_PROMOTION_CONFIG_IMPORTER }}

    - name: Start import Final Promotion config
      id: final-promotion-config
      run: |
        echo Importing ...${{ env.YAML_FINAL_PROMOTION_CONFIG_IMPORTER }}
        source ./${{ env.YAML_FINAL_PROMOTION_CONFIG_IMPORTER }}
      shell: bash

    - name: Get artifacts details for promotion
      run: |
        promotionQueryPath=artifacts.yaml-config
        promotionQueryPathInEnv=$(echo $promotionQueryPath | sed "s/-/_/g" | sed "s/\./__/g")
        fileQueryPath=${promotionQueryPathInEnv}__${SEQUENCE_ITEM_NO}__file
        fileQueryValue=${!fileQueryPath}
        versionQueryPath=${promotionQueryPathInEnv}__${SEQUENCE_ITEM_NO}__version_path
        versionQueryValue=${!versionQueryPath}
        artifactBaseNameQueryPath=${promotionQueryPathInEnv}__${SEQUENCE_ITEM_NO}__artifact_base_name
        artifactBaseNameQueryValue=${!artifactBaseNameQueryPath}
        artifactGroupQueryPath=${promotionQueryPathInEnv}__${SEQUENCE_ITEM_NO}__artifact_group
        artifactGroupQueryValue=${!artifactGroupQueryPath}
        artiSrcRepoQueryPath=${promotionQueryPathInEnv}__${SEQUENCE_ITEM_NO}__artifactory_src_repo
        artiSrcRepoQueryValue=${!artiSrcRepoQueryPath}
        artiPromoRepoQueryPath=${promotionQueryPathInEnv}__${SEQUENCE_ITEM_NO}__artifactory_promo_repo
        artiPromoRepoQueryValue=${!artiPromoRepoQueryPath}

        YAML_ARTIFACT_FILE="${fileQueryValue}" >> $GITHUB_ENV
        YAML_VERSION_QUERY_PATH="${versionQueryValue}" >> $GITHUB_ENV
        FINAL_ARTIFACT_BASE_NAME="${artifactBaseNameQueryValue}" >> $GITHUB_ENV
        FINAL_ARTIFACT_GROUP="${artifactGroupQueryValue}" >> $GITHUB_ENV
        FINAL_ARTIFACT_SRC_REPO="${artiSrcRepoQueryValue}" >> $GITHUB_ENV
        FINAL_ARTIFACT_PROMO_REPO="${artiPromoRepoQueryValue}" >> $GITHUB_ENV
      shell: bash

    - run: echo [INFO] Done injecting...
      shell: bash

