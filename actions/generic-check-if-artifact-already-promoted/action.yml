name: 'Partior - Check if artifact already promoted'
description: 'Check artifactory if artifact has been promoted'
inputs:
  source-artifact-full-path:  
    description: 'Full artifactory path to source artifact'
    required: true
    default: ''

  release-artifact-full-path:
    description: 'Full artifactory path to target release artifact'
    required: true
    default: ''

  jfrog-token:  
    description: 'Jfrog token'
    required: true
    default: ''

outputs:
  promoted:
    description: "Return result if artifact has been promoted correctly. true/false"
    value: ${{ steps.promotion.outputs.valid-result }}

runs:
  using: "composite"

  steps:
    - name: Setup jfrog
      uses: jfrog/setup-jfrog-cli@v2
      env:
        JF_ENV_1: ${{ inputs.jfrog-token }}

    - name: Check if source and target is identical
      id: get-properties
      env:
        SRC_ARTIFACT_PROP_JSON_FILE: src-artifact-prop-file
        RELEASE_ARTIFACT_PROP_JSON_FILE: release-artifact-prop-file
      run: |
        set +e
        ## Check for source first
        validResult='false'
        srcSha256Checksum=''
        ${{ github.action_path }}/../../scripts/generic-curl-get-artifact-meta.sh \
            "${{ inputs.source-artifact-full-path }}" \
            "" \
            "${{ env.SRC_ARTIFACT_PROP_JSON_FILE }}"
        if [[ $? -eq 0 ]]; then
            srcSha256Checksum=$(cat ${{ env.SRC_ARTIFACT_PROP_JSON_FILE }} | jq -r ".checksums.sha256")
            echo SRC_ARTIFACT_SHA256=${srcSha256Checksum}
            echo SRC_ARTIFACT_SHA256=${srcSha256Checksum} >> $GITHUB_ENV
        else
            echo "[ERROR] Unable to find source artifact: ${{ inputs.source-artifact-full-path }}"
            exit 1
        fi

        ## Check for target release version
        validResult='false'
        ${{ github.action_path }}/../../scripts/generic-curl-get-artifact-meta.sh \
            "${{ inputs.release-artifact-full-path }}" \
            "" \
            "${{ env.RELEASE_ARTIFACT_PROP_JSON_FILE }}"
        if [[ $? -eq 0 ]]; then
            releaseSha256Checksum=$(cat ${{ env.RELEASE_ARTIFACT_PROP_JSON_FILE }} | jq -r ".checksums.sha256")
            echo RELEASE_ARTIFACT_SHA256=${releaseSha256Checksum}
            echo RELEASE_ARTIFACT_SHA256=${releaseSha256Checksum} >> $GITHUB_ENV
            if [[ "$srcSha256Checksum" == "$releaseSha256Checksum" ]]; then
                validResult='true'
            else
                echo "[ERROR] SHA256 comparison of source and target release are different. Few posibilities - old base code needs to be rebase or release artifactory has been overwritten."
                echo "[DEBUG] SRC_ARTIFACT_SHA256=[$srcSha256Checksum], RELEASE_ARTIFACT_SHA256=[releaseSha256Checksum]"
                exit 1
            fi
        else
            echo "[INFO] Unable to find source artifact: ${{ inputs.source-artifact-full-path }}"
        fi

        echo ::set-output name=valid-result::${validResult}
      shell: bash


    - name: Set status
      id: promotion
      run: |
        if [[ "${{ steps.get-properties.outputs.valid-result }}" == 'true' ]]; then
            echo ::set-output name=valid-result::'true'
        else
            echo ::set-output name=valid-result::'false'
        fi
      shell: bash  
        
    - run: echo [INFO] Done checking...
      shell: bash

